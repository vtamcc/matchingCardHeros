{"version":3,"sources":["assets/MatchingCardHeros/scripts/game/CardHero.ItemLevel.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,gEAAkD;AAG5C,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA2C,iCAAY;IAAvD;QAAA,qEAqDC;QAlDG,YAAM,GAAY,IAAI,CAAC;QAGvB,kBAAY,GAAY,IAAI,CAAC;QAG7B,eAAS,GAAY,IAAI,CAAC;QAG1B,iBAAW,GAAY,IAAI,CAAC;QAG5B,WAAK,GAAY,IAAI,CAAC;QACtB,aAAO,GAAG,CAAC,CAAC;;QAoCZ,iBAAiB;IACrB,CAAC;IApCG,wBAAwB;IAGxB,8BAAM,GAAN;IACA,CAAC;IACD,+BAAO,GAAP,UAAQ,EAAU,EAAE,SAAkB,EAAE,MAAe,EAAC,UAAmB;QAEvE,IAAI,CAAC,OAAO,GAAE,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC;QAC/B,QAAQ,EAAE,EAAE;YACR,KAAK,CAAC,CAAC;YACP,KAAK,EAAE;gBACH,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;gBAClC,MAAM;YAEV;gBACI,MAAM;SACb;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,MAAM,GAAI,UAAU,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC;IAGtC,CAAC;IAED,mCAAW,GAAX;QACI,8BAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,6BAAK,GAAL;IAEA,CAAC;IA/CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACK;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;uDACW;IAG7B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACQ;IAG1B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACU;IAG5B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACI;IAfL,aAAa;QADjC,OAAO;OACa,aAAa,CAqDjC;IAAD,oBAAC;CArDD,AAqDC,CArD0C,EAAE,CAAC,SAAS,GAqDtD;kBArDoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameManager from \"../CardHero.GameManager\";\nimport { Global } from \"../CardHero.Global\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ItemLevelView extends cc.Component {\n\n    @property(cc.Node)\n    nBlock: cc.Node = null;\n\n    @property(cc.Node)\n    nLevelActive: cc.Node = null;\n\n    @property(cc.Node)\n    nBossBock: cc.Node = null;\n\n    @property(cc.Node)\n    nBossActive: cc.Node = null;\n\n    @property(cc.Node)\n    nFlag: cc.Node = null;\n    idLevel = 0;\n    // LIFE-CYCLE CALLBACKS:\n    \n\n    onLoad () {\n    }\n    setData(id: number, completed: boolean, isBoss: boolean,isUnlocked: boolean) {\n\n        this.idLevel= id;\n        this.nBlock.active = completed;\n        switch (id) {\n            case 5:\n            case 14:\n                this.nBossBock.active = completed;\n                break;\n        \n            default:\n                break;\n        }\n        this.nFlag.active = isUnlocked;\n        this.nLevelActive.active =  isUnlocked;\n        this.node.getComponent(cc.Button).interactable = isUnlocked;\n        this.nBossActive.active = !isBoss;\n        \n\n    }\n\n    onClickPlay() {\n        GameManager.instance.onClickPlay(this.idLevel);\n        console.log(\"Level \",this.idLevel);\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n"]}