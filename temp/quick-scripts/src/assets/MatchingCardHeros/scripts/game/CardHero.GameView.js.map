{"version":3,"sources":["assets/MatchingCardHeros/scripts/game/CardHero.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { Global } from \"../CardHero.Global\";\nimport Card from \"./CardHero.Card\";\nimport Char from \"./CardHero.Char\";\nimport Monster from \"./CardHero.Monster\";\nimport GameOver from \"./popup/CardHero.GameOver\";\nimport Pause from \"./popup/CardHero.Pause\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameView extends cc.Component {\n    public static instance: GameView = null;\n    @property(cc.Prefab)\n    prfCard: cc.Prefab = null;\n    @property(cc.Prefab)\n    prfMonster: cc.Prefab = null;\n    @property(cc.SpriteFrame)\n    listSpfCards: cc.SpriteFrame[] = [];\n    @property(cc.Node)\n    nMonters: cc.Node = null;\n    @property(cc.Node)\n    nTableCards: cc.Node = null;\n    @property(cc.Label)\n    lbHpChar: cc.Label = null;\n    @property(cc.Label)\n    lbHpMonster: cc.Label = null;\n    @property(cc.Node)\n    nMaskClick: cc.Node = null;\n    @property(cc.Node)\n    nMaskLoadGame: cc.Node = null;\n    @property(cc.Node)\n    lbDameMonster: cc.Node = null;\n    @property(cc.SpriteFrame)\n    listSpfMonster: cc.SpriteFrame[] = [];\n    isClick = false;\n    countClick = 0;\n    listIdCard = [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12];\n    selectedCards = [];\n    dataCard = [];\n    @property(Char)\n    charArchers: Char = null;\n    @property(Char)\n    charFighter: Char = null;\n    @property(Char)\n    charMagic: Char = null;\n\n    @property(cc.Node)\n    lbDameChar: cc.Node = null;\n\n    @property(cc.Prefab)\n    prfGameOver: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    prfPause: cc.Prefab = null;\n\n    @property(cc.Node)\n    nShield: cc.Node = null;\n    @property(cc.Label)\n    lbShield: cc.Label = null;\n    @property(cc.Node)\n    nDameMonsterMiss: cc.Node = null;\n    listMonsters = [];\n    idMonster = 0;\n    rows = 5;\n    cols = 5;\n    spacing = 10;\n    private startX: number = -337;\n    private startY: number = 210;\n    private tileWidth: number = 135;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        GameView.instance = this;\n        this.listIdCard = this.shuffleArray(this.listIdCard);\n        this.maskLoadGame();\n        this.scheduleOnce(() => {\n            this.loadCards();\n\n        }, 1)\n        this.createMonster(0, 10, 1);\n        this.updateHpChar();\n        this.updateHpBagGuy();\n\n    }\n\n    onDestroy() {\n        GameView.instance = null\n    }\n\n    maskLoadGame() {\n        this.nMaskLoadGame.active = true;\n        this.scheduleOnce(() => {\n            this.nMaskLoadGame.active = false;\n        }, 7)\n    }\n\n    loadCards() {\n        // for(let i = 0; i < 25; i++) {\n        //     let card = cc.instantiate(this.prfCard).getComponent(Card)\n        //     card.setData(this.listIdCard[i])\n        //     this.nTableCards.addChild(card.node);\n        // }\n        let idIndex = 0;\n\n        for (let i = 0; i < this.rows; i++) {\n            this.dataCard[i] = [];\n            for (let j = 0; j < this.cols; j++) {\n                if (idIndex >= this.listIdCard.length) break;\n\n                let card = cc.instantiate(this.prfCard).getComponent(Card);\n                card.setData(this.listIdCard[idIndex]);\n\n                this.nTableCards.addChild(card.node);\n                card.node.x = this.startX + j * this.tileWidth + this.tileWidth / 2;\n                card.node.y = this.startY - i * this.tileWidth + this.tileWidth / 2;\n                this.dataCard[i][j] = card;\n                idIndex++;\n            }\n        }\n\n    }\n\n    createMonster(id: number, hp: number, dame: number) {\n        let monter = cc.instantiate(this.prfMonster).getComponent(Monster)\n        monter.setMonster(id, hp, dame);\n        this.nMonters.addChild(monter.node);\n        this.listMonsters.push(monter);\n        //   this.idMonster++;\n    }\n\n\n    attackMonster(dame) {\n        if (this.listMonsters.length > 0) {\n            let [monster] = this.listMonsters;\n            if (monster && monster.node) {\n                monster.receiveDamage(dame);\n                if (Global.hpMonster <= 0) {\n                    this.listMonsters = this.listMonsters.filter(m => m !== monster);\n                    console.log(\"Monster \", this.listMonsters);\n                }\n            }\n        }\n    }\n    gameOver() {\n        if (Global.hpChar == 0) {\n            let prfGameOver = cc.instantiate(this.prfGameOver).getComponent(GameOver)\n            this.node.addChild(prfGameOver.node);\n        }\n    }\n\n    onClickPause() {\n        let prfPause = cc.instantiate(this.prfPause).getComponent(Pause)\n        this.node.addChild(prfPause.node);\n        this.nTableCards.children.forEach(element => {\n            element.active = false;\n        });\n        cc.director.pause();\n    }\n\n    onClickResume() {\n        cc.director.resume();\n        this.nTableCards.children.forEach(element => {\n            element.active = true;\n        });\n    }\n    shuffleArray(array: number[]): number[] {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    }\n\n    addSelectedCard(card: Card) {\n        if (this.selectedCards.length < 2) {\n            this.selectedCards.push(card);\n            if (this.selectedCards.length === 2) {\n                this.scheduleOnce(this.checkMatch.bind(this), 0.6);\n            }\n        }\n    }\n\n\n    checkMatch() {\n        let [firstCard, secondCard] = this.selectedCards;\n\n        if (firstCard.idCard === 0 && secondCard.idCard === 0) {\n            Global.shield = 3;\n            this.nShield.active = true;\n            console.log(\"Shield Activated: \", Global.shield);\n            this.updateShield();\n            firstCard.node.destroy();\n            secondCard.node.destroy();\n        } else if (firstCard.idCard === 12 || secondCard.idCard === 12) {\n            let doubleDame = true;\n            let multiplierCard = firstCard.idCard === 12 ? secondCard : firstCard;\n            this.selectAttack(multiplierCard.idCard, doubleDame);\n            firstCard.node.destroy();\n            secondCard.node.destroy();\n        } else if (firstCard.idCard === secondCard.idCard) {\n            this.selectAttack(firstCard.idCard, false);\n            firstCard.node.destroy();\n            secondCard.node.destroy();\n        } else {\n\n            if (Global.shield > 0) {\n                Global.shield--;\n                this.updateShield();\n                this.effectDameBagGuyMiss(this.nDameMonsterMiss);\n                console.log(\"Shield: \", Global.shield);\n            } if (Global.shield == 0) {\n                this.nShield.active = false;\n                Global.hpChar--;\n                this.effectDameBagGuy(this.lbDameMonster, Global.dameMonster);\n                this.updateHpChar();\n                this.gameOver();\n            }\n\n            firstCard.flipCard();\n            secondCard.flipCard();\n            firstCard.isClicked = false;\n            secondCard.isClicked = false;\n        }\n\n        this.selectedCards = [];\n    }\n\n\n    selectAttack(id, isDoubleDame: boolean) {\n        switch (id) {\n            case 0:\n                console.log(\"Giap ne \");\n                if (Global.shield === 0) {\n                    Global.shield = 3;\n                }\n                Global.shield *= isDoubleDame ? 2 : 1;\n                this.nShield.active = true;\n                this.updateShield();\n                break\n            case 1:\n                console.log(\"Mau ne \");\n                // if (Global.hpChar >= 10) return;\n                // else {\n                if (isDoubleDame) {\n                    Global.hpChar *= 2;\n                } else {\n                    Global.hpChar += 5;\n                }\n                this.updateHpChar();\n                //}\n                break\n            case 2:\n                console.log(\"Cung nho ban \");\n                Global.dameCharSmall *= (isDoubleDame) ? 2 : 1;\n                this.charArchers.charAttack();\n                this.attackMonster(Global.dameCharSmall);\n                break\n            case 3:\n                console.log(\"Cung Tb ban \");\n                Global.dameCharNormal *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharNormal)\n                this.charArchers.charAttack();\n                break\n            case 4:\n                this.charArchers.charAttack();\n                Global.dameCharBig *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharBig);\n                break\n            case 5:\n                Global.dameCharSmall *= (isDoubleDame) ? 2 : 1;\n                Global.hpMonster -= Global.dameCharSmall;\n                this.charFighter.charAttack();\n                break\n            case 6:\n                Global.dameCharNormal *= (isDoubleDame) ? 2 : 1;\n                this.charFighter.charAttack();\n                this.attackMonster(Global.dameCharNormal);\n                break\n            case 7:\n                console.log(\"KIem danh \");\n                Global.dameCharBig *= (isDoubleDame) ? 2 : 1;\n                this.charFighter.charAttack();\n                this.attackMonster(Global.dameCharBig)\n                break\n            case 8:\n                Global.dameCharSmall *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharSmall)\n                this.charMagic.charAttack();\n                break;\n            case 9:\n                Global.dameCharNormal *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharNormal)\n                this.charMagic.charAttack();\n                break\n            case 10:\n                Global.dameCharBig *= (isDoubleDame) ? 2 : 1;\n                this.charMagic.charAttack();\n                this.attackMonster(Global.dameCharBig)\n                break\n            default:\n                break;\n        }\n    }\n    start() {\n\n    }\n\n    effectDameBagGuy(node: cc.Node, dame: number) {\n        node.active = true;\n        node.getComponent(cc.Label).string = \"-\" + dame;\n        cc.tween(node)\n            .to(0.8, { y: 200 })\n            .call(() => {\n                node.active = false;\n                node.y = -70;\n            }).start();\n    }\n\n    effectDameBagGuyMiss(node: cc.Node) {\n        if (Global.shield > 0) {\n            node.active = true;\n            //node.getComponent(cc.Label).string = \"-\" + dame;\n            cc.tween(node)\n                .to(0.8, { y: 200 })\n                .call(() => {\n                    node.active = false;\n                    node.y = -70;\n                }).start();\n        } if (Global.shield == 0) {\n            node.active = false;\n        }\n\n    }\n    updateHpChar() {\n        this.lbHpChar.string = Global.hpChar + ' ';\n    }\n\n    updateHpBagGuy() {\n        this.lbHpMonster.string = Global.hpMonster + ' ';\n    }\n\n    updateShield() {\n        this.lbShield.string = Global.shield + ' ';\n    }\n    onClickRestart() {\n        Global.hpChar = 10;\n        Global.hpMonster = 10;\n        this.updateHpChar();\n        this.updateHpBagGuy();\n        this.updateShield();\n        this.nTableCards.removeAllChildren();\n        this.nMonters.removeAllChildren();\n        this.selectedCards = [];\n        this.listMonsters = [];\n\n        // Shuffle and reload cards\n        this.listIdCard = this.shuffleArray(this.listIdCard);\n        this.loadCards();\n\n        // Create a new monster\n        this.createMonster(0, 10, 1);\n\n        console.log(\"Game restarted\");\n    }\n\n    destroyGame() {\n        console.log(\"destroyyy \")\n        this.node.destroy();\n    }\n    // update (dt) {}\n}\n"]}