{"version":3,"sources":["assets\\MatchingCardHeros\\scripts\\game\\CardHero.Card.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport GameView from \"./CardHero.GameView\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Card extends cc.Component {\r\n\r\n   @property(cc.Node)\r\n   nCardBack: cc.Node = null;\r\n\r\n   @property(cc.Node)\r\n   nCardFront: cc.Node = null;\r\n\r\n   @property(cc.Node)\r\n   nCardSpf: cc.Node = null;\r\n\r\n   idCard = 0;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    setData(id) {\r\n        this.idCard = id;\r\n        this.nCardSpf.getComponent(cc.Sprite).spriteFrame = GameView.instance.listSpfCards[id];\r\n    }\r\n\r\n    onClickCards() {\r\n        console.log(\"id \", this.idCard);\r\n        this.flipCard();\r\n    }\r\n\r\n    flipCard() {\r\n        cc.tween(this.node)\r\n            .to(0.3, { scaleX: 0 })\r\n            .call(() => {\r\n                if (!this.nCardFront.active) {\r\n                    this.nCardFront.active = true;\r\n                    this.nCardBack.active = false;\r\n                } else {\r\n                    this.nCardFront.active = false;\r\n                    this.nCardBack.active = true;\r\n                }\r\n            })\r\n            .to(0.3, { scaleX: 1 })\r\n            .start();\r\n    }\r\n\r\n    flipToFront() {\r\n        // Đảm bảo thẻ hiện tại đang ở trạng thái mặt sau\r\n        if (this.nCardFront.active) {\r\n            cc.tween(this.node)\r\n                .to(0.3, { scaleX: 0 })\r\n                .call(() => {\r\n                    this.nCardFront.active = false;\r\n                    this.nCardBack.active = true;\r\n                })\r\n                .to(0.3, { scaleX: 1 })\r\n                .start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        // Khởi tạo trạng thái thẻ (mặt sau)\r\n        this.nCardFront.active = true;\r\n        this.nCardBack.active = false;\r\n\r\n        // Lật thẻ trở lại mặt trước sau 3 giây\r\n        this.scheduleOnce(this.flipToFront, 3);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}