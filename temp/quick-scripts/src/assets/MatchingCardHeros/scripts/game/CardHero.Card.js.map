{"version":3,"sources":["assets/MatchingCardHeros/scripts/game/CardHero.Card.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameView from \"./CardHero.GameView\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Card extends cc.Component {\n\n   @property(cc.Node)\n   nCardBack: cc.Node = null;\n   @property(cc.Node)\n   nCardFront: cc.Node = null;\n   @property(cc.Node)\n   nCardSpf: cc.Node = null;\n   isClicked = false;\n   idCard = 0;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.flipToBack();\n        this.scheduleOnce(this.flipTofront,5);\n    }\n    setData(id) {\n        this.idCard = id;\n        this.nCardSpf.getComponent(cc.Sprite).spriteFrame = GameView.instance.listSpfCards[id];\n    }\n\n    onClickCards() {\n        if(this.isClicked) return;\n        this.isClicked = true;\n        this.flipCard();\n        GameView.instance.addSelectedCard(this);\n        GameView.instance.countClick++;\n        if(GameView.instance.countClick == 2) {\n            GameView.instance.nMaskClick.active = true;\n            this.scheduleOnce(() => {\n                GameView.instance.nMaskClick.active = false;\n            },0.6)\n            GameView.instance.countClick = 0;\n        }\n    }\n\n    setCards(active: boolean) {\n        this.nCardBack.active = active;\n        this.nCardFront.active = !active;\n    }\n\n    flipToBack(callback: Function = null) {\n        cc.tween(this.node)\n            .to(0.3, { scaleX: 0.1 })\n            .call(() => {\n                this.setCards(true);\n                if (callback) callback();\n            })\n            .to(0.3, { scaleX: 1 }).start();\n    }\n\n    flipTofront() {\n        if(!this.nCardFront.active) {\n            cc.tween(this.node)\n            .to(0.3,{scaleX:0})\n            .call(()=> {\n                this.setCards(false);\n            })\n            .to(0.3, {scaleX:1})\n            .start();\n        }\n    }\n\n    flipCard() {\n        cc.tween(this.node)\n        .to(0.3,{scaleX: 0})\n        .call(() =>{\n            if(!this.nCardBack.active) {\n                this.setCards(true);\n            }else {\n                this.setCards(false);\n            }\n        }).to(0.3, {scaleX:1}).start();\n    }\n   \n    // start() {\n    // }\n\n    // update (dt) {}\n}\n"]}