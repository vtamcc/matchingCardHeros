{"version":3,"sources":["assets/MatchingCardHeros/scripts/game/CardHero.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { Global } from \"../CardHero.Global\";\nimport Card from \"./CardHero.Card\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameView extends cc.Component {\n   public static instance: GameView = null;\n   @property(cc.Prefab)\n   prfCard: cc.Prefab = null;\n   @property(cc.SpriteFrame)\n   listSpfCards: cc.SpriteFrame[] = [];\n   @property(cc.Node)\n   nTableCards: cc.Node = null;\n   @property(cc.Label)\n   lbHpChar: cc.Label = null;\n   @property(cc.Label)\n   lbHpBagGuy: cc.Label = null;\n   @property(cc.Node)\n   nMaskClick: cc.Node = null;\n   @property(cc.Node)\n   nMaskLoadGame: cc.Node = null;\n   isClick = false;\n   countClick = 0;\n   listIdCard = [0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12];\n   selectedCards = [];\n   dataCard =[];\n   rows = 5;\n   cols = 5;\n   spacing = 10;\n   dame = 0;\n   private startX: number = -337;\n   private startY: number = 210;\n   private tileWidth: number = 135;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        GameView.instance = this;\n        this.listIdCard = this.shuffleArray(this.listIdCard);\n        this.maskLoadGame();\n        this.scheduleOnce(() => {\n            this.loadCards();\n           \n        },1)\n        \n        this.updateHpChar();\n        this.updateHpBagGuy();\n    }\n\n    maskLoadGame() {\n        this.nMaskLoadGame.active = true;\n        this.scheduleOnce(() => {\n            this.nMaskLoadGame.active = false;\n        },5)\n    }\n\n    loadCards() {\n        // for(let i = 0; i < 25; i++) {\n        //     let card = cc.instantiate(this.prfCard).getComponent(Card)\n        //     card.setData(this.listIdCard[i])\n        //     this.nTableCards.addChild(card.node);\n        // }\n        let idIndex = 0;\n\n        for (let i = 0; i < this.rows; i++) {\n            this.dataCard[i] = [];\n            for (let j = 0; j < this.cols; j++) {\n                if (idIndex >= this.listIdCard.length) break;\n\n                let card = cc.instantiate(this.prfCard).getComponent(Card);\n                card.setData(this.listIdCard[idIndex]);\n\n                this.nTableCards.addChild(card.node);\n                card.node.x = this.startX + j * this.tileWidth + this.tileWidth / 2;\n                card.node.y = this.startY - i * this.tileWidth + this.tileWidth / 2;\n                this.dataCard[i][j] = card;\n\n                idIndex++;\n            }\n        }\n\n        console.log(this.dataCard);\n    }\n\n    shuffleArray(array: number[]): number[] {\n        for (let i = array.length-1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    }\n\n    addSelectedCard(card: Card) {\n        if (this.selectedCards.length < 2) {\n            this.selectedCards.push(card);\n            if (this.selectedCards.length === 2) {\n                this.scheduleOnce(this.checkMatch.bind(this), 2); // Delay to show the cards\n            }\n        }\n    }\n\n   \n    checkMatch() {\n        let [firstCard, secondCard] = this.selectedCards;\n        console.log(\"Mang \",this.selectedCards);\n        if (firstCard.idCard === secondCard.idCard) {\n           this.selectAttack(firstCard.idCard);\n           \n           firstCard.node.destroy();\n           secondCard.node.destroy();\n        } else {\n            Global.hpChar--;\n            this.updateHpChar();\n            firstCard.flipCard();\n            secondCard.flipCard();\n            console.log(\"sai me roi\");\n        }\n        this.selectedCards = [];\n    }\n    \n   selectAttack(id) {\n        switch (id) {\n            case 0:\n                console.log(\"Giap ne \");\n                break\n            case 1:\n                console.log(\"Mau ne \");\n                break\n            case 2:\n                console.log(\"Cung nho ban \");\n                this.dame += 5;\n                Global.hpBagGuy -= this.dame;\n                this.updateHpBagGuy();\n                break\n            case 3:\n                console.log(\"Cung Tb báº¯n \");\n                break\n            case 4:\n                console.log(\"Giap ne \");\n                break\n            case 5:\n                console.log(\"Giap ne \");\n                break\n            case 6:\n                console.log(\"Giap ne \");\n                break\n            case 7:\n                console.log(\"Giap ne \");\n                break\n            case 8:\n                console.log(\"Giap ne \");\n                break\n            default:\n                break;\n        }\n   }\n    start () {\n\n    }\n\n    updateHpChar() {\n        this.lbHpChar.string = Global.hpChar + ' ';\n    }\n\n    updateHpBagGuy() {\n        this.lbHpBagGuy.string = Global.hpBagGuy + ' ';\n    }\n\n\n    // update (dt) {}\n}\n"]}