{"version":3,"sources":["assets/MatchingCardHeros/scripts/game/CardHero.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { Global } from \"../CardHero.Global\";\nimport Card from \"./CardHero.Card\";\nimport Char from \"./CardHero.Char\";\nimport Level from \"./CardHero.LevelView\";\nimport Monster from \"./CardHero.Monster\";\nimport GameOver from \"./popup/CardHero.GameOver\";\nimport Pause from \"./popup/CardHero.Pause\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameView extends cc.Component {\n    public static instance: GameView = null;\n    @property(cc.Prefab)\n    prfCard: cc.Prefab = null;\n    @property(cc.Prefab)\n    prfMonster: cc.Prefab = null;\n    @property(cc.SpriteFrame)\n    listSpfCards: cc.SpriteFrame[] = [];\n    @property(cc.Node)\n    nMonters: cc.Node = null;\n    @property(cc.Node)\n    nTableCards: cc.Node = null;\n    @property(cc.Label)\n    lbHpChar: cc.Label = null;\n    @property(cc.Label)\n    lbHpMonster: cc.Label = null;\n    @property(cc.Node)\n    nMaskClick: cc.Node = null;\n    @property(cc.Node)\n    nMaskLoadGame: cc.Node = null;\n    @property(cc.Node)\n    lbDameMonster: cc.Node = null;\n    @property(cc.SpriteFrame)\n    listSpfMonster: cc.SpriteFrame[] = [];\n    isClick = false;\n    countClick = 0;\n    listIdCard = [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12];\n    selectedCards = [];\n    dataCard = [];\n    @property(Char)\n    charArchers: Char = null;\n    @property(Char)\n    charFighter: Char = null;\n    @property(Char)\n    charMagic: Char = null;\n\n    @property(cc.Node)\n    lbDameChar: cc.Node = null;\n\n    @property(cc.Prefab)\n    prfGameOver: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    prfPause: cc.Prefab = null;\n\n    @property(cc.Node)\n    nShield: cc.Node = null;\n    @property(cc.Label)\n    lbShield: cc.Label = null;\n    @property(cc.Node)\n    nDameMonsterMiss: cc.Node = null;\n\n    @property(cc.Label)\n    lbLevel: cc.Label = null;\n    listMonsters = [];\n    idMonster = 0;\n    rows = 5;\n    cols = 5;\n    spacing = 10;\n    private startX: number = -337;\n    private startY: number = 210;\n    private tileWidth: number = 135;\n    selectedLevel: number = 0;\n    monstersDefeated = 0;\n\n    isCheck = false;\n    countMonsterDie = 0;\n    private currentMonsterIndex: number = -1;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.selectedLevel = parseInt(cc.sys.localStorage.getItem('selectedLevel')) || 0;\n        Global.dameCharSmall = parseInt(cc.sys.localStorage.getItem(\"dameCharSmall\")) || Global.dameCharSmall;\n        Global.dameCharNormal = parseInt(cc.sys.localStorage.getItem(\"dameCharNormal\")) || Global.dameCharNormal;\n        Global.dameCharBig = parseInt(cc.sys.localStorage.getItem(\"dameCharBig\")) || Global.dameCharBig;\n        Global.hpChar = parseInt(cc.sys.localStorage.getItem(\"hpChar\")) || Global.hpChar;\n        if(parseInt(cc.sys.localStorage.getItem(\"hpChar\"))) {\n            Global.hpChar = parseInt(cc.sys.localStorage.getItem(\"hpChar\")) || Global.hpChar;\n            console.log(\"vao if\")\n            this.updateHpChar();\n        }else {\n            Global.hpChar = 10;\n            this.updateHpChar();\n            console.log(\"vao else\");\n        }\n        GameView.instance = this;\n        this.listIdCard = this.shuffleArray(this.listIdCard);\n        this.maskLoadGame();\n        this.scheduleOnce(() => {\n            this.loadCards();\n\n        }, 1)\n        this.spawnMonster(); \n        this.updateHpBagGuy();\n        this.updateLevelLb();\n\n    }\n\n    updateLevelLb() {\n        this.lbLevel.string = `LV ${this.selectedLevel + 1}`;\n    }\n    onDestroy() {\n        GameView.instance = null\n    }\n\n    maskLoadGame() {\n        this.nMaskLoadGame.active = true;\n        this.scheduleOnce(() => {\n            this.nMaskLoadGame.active = false;\n        }, 7)\n    }\n\n    loadCards() {\n        let idIndex = 0;\n\n        for (let i = 0; i < this.rows; i++) {\n            this.dataCard[i] = [];\n            for (let j = 0; j < this.cols; j++) {\n                if (idIndex >= this.listIdCard.length) break;\n\n                let card = cc.instantiate(this.prfCard).getComponent(Card);\n                card.setData(this.listIdCard[idIndex]);\n\n                this.nTableCards.addChild(card.node);\n                card.node.x = this.startX + j * this.tileWidth + this.tileWidth / 2;\n                card.node.y = this.startY - i * this.tileWidth + this.tileWidth / 2;\n                this.dataCard[i][j] = card;\n                idIndex++;\n            }\n        }\n\n    }\n    spawnMonster() {\n        const levelInfo = Global.levelData[this.selectedLevel];\n        console.log(\"level \",this.selectedLevel);\n        if (this.currentMonsterIndex < levelInfo.monsters) {\n            this.currentMonsterIndex++;\n            let id = this.currentMonsterIndex\n            this.createMonster(id, levelInfo.hp, levelInfo.dame);\n            console.log(\"Quai vat dau tien \", this.currentMonsterIndex);\n        } else {\n            this.completeLevel();\n        }\n\n    }\n\n    createMonster(id: number, hp: number, dame: number) {\n        let monster = cc.instantiate(this.prfMonster).getComponent(Monster);\n        let spriteIdList = Global.levelMonsterSprites[this.selectedLevel];\n        let spriteId = spriteIdList[id];\n        monster.setMonster(spriteId, hp, dame);\n        this.nMonters.addChild(monster.node);\n        this.listMonsters.push(monster);\n    }\n\n\n    attackMonster(dame) {\n        if (this.listMonsters.length > 0) {\n            let [monster] = this.listMonsters;\n            if (monster && monster.node) {\n                monster.receiveDamage(dame);\n                if (Global.hpMonster <= 0) {\n                    this.listMonsters = this.listMonsters.filter(m => m !== monster);\n                    this.monstersDefeated++;\n                    this.countMonsterDie++;\n                    console.log(\"Montes die \", this.countMonsterDie);\n                    this.scheduleOnce(() => {\n                        this.spawnMonster(); \n                    },0.8)\n                    \n                    console.log(\"Monster \", this.listMonsters);\n                }\n            }\n        }\n    }\n\n    completeLevel() {\n        let wasCompleted = cc.sys.localStorage.getItem(`level_${this.selectedLevel}_completed`) === 'true';\n        if (!wasCompleted) {\n            Global.totalGold += 1;\n            Level.instance.updateGold();\n        }\n\n        \n        cc.sys.localStorage.setItem(`level_${this.selectedLevel}_completed`, 'true');\n        console.log(`Level ${this.selectedLevel} đã hoàn thành`);\n    \n        // Mở khóa level tiếp theo\n        let nextLevel = this.selectedLevel + 1;\n        if (nextLevel < Global.levelData.length) {\n            cc.sys.localStorage.setItem(`level_${nextLevel}_unlocked`, 'true');\n            Level.instance.updateLevelStatus(nextLevel);\n        }\n        console.log(\"level tiep theo la \", nextLevel);\n\n        if(nextLevel == 5 || nextLevel == 14) {\n            cc.sys.localStorage.setItem(`level_${nextLevel}_isBoss`, 'true');\n            Level.instance.updateLevelStatus(nextLevel);\n        }\n\n        if(this.selectedLevel == 5 || this.selectedLevel == 14) {\n            cc.sys.localStorage.setItem(`level_${this.selectedLevel}_flagBoss`, 'true');\n            console.log('co bosss', this.selectedLevel);\n            Level.instance.updateLevelStatus(this.selectedLevel);\n    \n        }\n        // Lưu trạng thái lá cờ\n        cc.sys.localStorage.setItem(`level_${this.selectedLevel}_flag`, 'true');\n        Level.instance.updateLevelStatus(this.selectedLevel);\n    \n        const lastLevel = Global.levelData.length - 1;\n        if (this.selectedLevel >= lastLevel) {\n            console.log(\"Đã hoàn thành tất cả các level, không thể chơi tiếp.\");\n        }\n        \n        this.gameOver(true);\n    \n    }\n\n\n    loadNextLevel() {\n        // Thiết lập lại trạng thái cần thiết cho level mới\n        if(parseInt(cc.sys.localStorage.getItem(\"hpChar\"))) {\n            Global.hpChar = parseInt(cc.sys.localStorage.getItem(\"hpChar\")) || Global.hpChar;\n            console.log(\"vao if\")\n            this.updateHpChar();\n        }else {\n            Global.hpChar = 10;\n            this.updateHpChar();\n            console.log(\"vao else\");\n        }\n        Global.shield = 0;\n        this.monstersDefeated = 0;\n        this.currentMonsterIndex = -1;\n        this.countMonsterDie = 0;\n        this.nShield.active =false;\n        this.nTableCards.removeAllChildren();\n        this.nMonters.removeAllChildren();\n        this.selectedCards = [];\n        this.listMonsters = [];\n\n        this.listIdCard = this.shuffleArray(this.listIdCard);\n        this.loadCards();\n        this.spawnMonster(); \n        this.updateHpChar();\n        this.updateHpBagGuy();\n        this.maskLoadGame();\n\n        console.log(`Loaded Level ${this.selectedLevel}`);\n        this.updateLevelLb();\n    }\n\n\n    gameOver(isWin: boolean) {\n        // let prfGameOver = cc.instantiate(this.prfGameOver).getComponent(GameOver);\n        \n        // if (isWin) {\n        //     prfGameOver.nStarWin_1.active = true;\n        //     prfGameOver.nStarWin_2.active = true;\n        //     prfGameOver.nStarWin_3.active = true;\n        //     prfGameOver.nBtnNext.getComponent(cc.Button).interactable = true;\n        //     prfGameOver.nBtnNext.getComponent(cc.Button).enableAutoGrayEffect = false;\n        //     prfGameOver.winGame(true);\n        //     prfGameOver.nBtnNext.on('click', () => {\n        //         this.selectedLevel++;\n        //         cc.sys.localStorage.setItem('selectedLevel', this.selectedLevel.toString());\n        //         this.loadNextLevel();\n        //     }, this);\n    \n        //     console.log(\"Level hoàn thành\", this.selectedLevel);\n        // } else {\n        //     prfGameOver.winGame(false);\n        //     prfGameOver.nBtnNext.getComponent(cc.Button).interactable = false;\n        //     prfGameOver.nBtnNext.getComponent(cc.Button).enableAutoGrayEffect = true;\n        // }\n        \n        // this.node.addChild(prfGameOver.node);\n        // console.log(\"Số quái vật trong level: \", Global.levelData[this.selectedLevel].monsters);\n        // console.log(\"Số quái vật đã chết: \", this.countMonsterDie);\n\n        let prfGameOver = cc.instantiate(this.prfGameOver).getComponent(GameOver);\n    \n        if (isWin) {\n            prfGameOver.nStarWin_1.active = true;\n            prfGameOver.nStarWin_2.active = true;\n            prfGameOver.nStarWin_3.active = true;\n    \n            const lastLevel = Global.levelData.length - 1;\n            if (this.selectedLevel >= lastLevel) {\n                prfGameOver.nBtnNext.getComponent(cc.Button).interactable = false;\n                prfGameOver.nBtnNext.getComponent(cc.Button).enableAutoGrayEffect = true;\n                console.log(\"Đã hoàn thành tất cả các level, không thể chơi tiếp.\");\n            } else {\n                prfGameOver.nBtnNext.getComponent(cc.Button).interactable = true;\n                prfGameOver.nBtnNext.getComponent(cc.Button).enableAutoGrayEffect = false;\n                prfGameOver.nBtnNext.on('click', () => {\n                    this.selectedLevel++;\n                    cc.sys.localStorage.setItem('selectedLevel', this.selectedLevel.toString());\n                    this.loadNextLevel();\n                }, this);\n            }\n    \n            prfGameOver.winGame(true);\n            console.log(\"Level hoàn thành\", this.selectedLevel);\n        } else {\n            prfGameOver.winGame(false);\n            prfGameOver.nBtnNext.getComponent(cc.Button).interactable = false;\n            prfGameOver.nBtnNext.getComponent(cc.Button).enableAutoGrayEffect = true;\n        }\n        \n        this.node.addChild(prfGameOver.node);\n        console.log(\"Số quái vật trong level: \", Global.levelData[this.selectedLevel].monsters);\n        console.log(\"Số quái vật đã chết: \", this.countMonsterDie);\n    }\n\n    onClickPause() {\n        let prfPause = cc.instantiate(this.prfPause).getComponent(Pause)\n        this.node.addChild(prfPause.node);\n        this.nTableCards.children.forEach(element => {\n            element.active = false;\n        });\n    }\n\n    onClickResume() {\n        this.nTableCards.children.forEach(element => {\n            element.active = true;\n        });\n    }\n    shuffleArray(array: number[]): number[] {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    }\n\n    addSelectedCard(card: Card) {\n        if (this.selectedCards.length < 2) {\n            this.selectedCards.push(card);\n            if (this.selectedCards.length === 2) {\n                this.scheduleOnce(this.checkMatch.bind(this), 0.6);\n            }\n        }\n    }\n\n\n    checkMatch() {\n        let [firstCard, secondCard] = this.selectedCards;\n\n        if (firstCard.idCard === 0 && secondCard.idCard === 0) {\n            Global.shield = 3;\n            this.nShield.active = true;\n            console.log(\"Shield Activated: \", Global.shield);\n            this.updateShield();\n            firstCard.node.destroy();\n            secondCard.node.destroy();\n        } else if (firstCard.idCard === 12 || secondCard.idCard === 12) {\n            let doubleDame = true;\n            let multiplierCard = firstCard.idCard === 12 ? secondCard : firstCard;\n            this.selectAttack(multiplierCard.idCard, doubleDame);\n            firstCard.node.destroy();\n            secondCard.node.destroy();\n        } else if (firstCard.idCard === secondCard.idCard) {\n            this.selectAttack(firstCard.idCard, false);\n            firstCard.node.destroy();\n            secondCard.node.destroy();\n        } else {\n\n            if (Global.shield > 0) {\n                Global.shield--;\n                this.updateShield();\n                this.effectDameBagGuyMiss(this.nDameMonsterMiss);\n                console.log(\"Shield: \", Global.shield);\n            } if (Global.shield == 0) {\n                this.nShield.active = false;\n                Global.hpChar -= Global.dameMonster;\n                this.effectDameBagGuy(this.lbDameMonster, Global.dameMonster);\n                this.updateHpChar();\n                if (Global.hpChar <= 0) {\n                    this.gameOver(false); // Gọi hàm gameOver với điều kiện thua\n                    return;\n                }\n            }\n\n            firstCard.flipCard();\n            secondCard.flipCard();\n            firstCard.isClicked = false;\n            secondCard.isClicked = false;\n        }\n\n        this.selectedCards = [];\n    }\n\n\n    selectAttack(id, isDoubleDame: boolean) {\n        switch (id) {\n            case 0:\n                console.log(\"Giap ne \");\n                if (Global.shield === 0) {\n                    Global.shield = 3;\n                }\n                Global.shield *= isDoubleDame ? 2 : 1;\n                this.nShield.active = true;\n                this.updateShield();\n                break\n            case 1:\n                console.log(\"Mau ne \");\n                // if (Global.hpChar >= 10) return;\n                // else {\n                if (isDoubleDame) {\n                    Global.hpChar *= 2;\n                } else {\n                    Global.hpChar += 5;\n                }\n                this.updateHpChar();\n                //}\n                break\n            case 2:\n                console.log(\"Cung nho ban \");\n                Global.dameCharSmall *= (isDoubleDame) ? 2 : 1;\n                this.charArchers.charAttack();\n                this.attackMonster(Global.dameCharSmall);\n                break\n            case 3:\n                console.log(\"Cung Tb ban \");\n                Global.dameCharNormal *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharNormal)\n                this.charArchers.charAttack();\n                break\n            case 4:\n                this.charArchers.charAttack();\n                Global.dameCharBig *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharBig);\n                break\n            case 5:\n                Global.dameCharSmall *= (isDoubleDame) ? 2 : 1;\n                Global.hpMonster -= Global.dameCharSmall;\n                this.charFighter.charAttack();\n                break\n            case 6:\n                Global.dameCharNormal *= (isDoubleDame) ? 2 : 1;\n                this.charFighter.charAttack();\n                this.attackMonster(Global.dameCharNormal);\n                break\n            case 7:\n                console.log(\"KIem danh \");\n                Global.dameCharBig *= (isDoubleDame) ? 2 : 1;\n                this.charFighter.charAttack();\n                this.attackMonster(Global.dameCharBig)\n                break\n            case 8:\n                Global.dameCharSmall *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharSmall)\n                this.charMagic.charAttack();\n                break;\n            case 9:\n                Global.dameCharNormal *= (isDoubleDame) ? 2 : 1;\n                this.attackMonster(Global.dameCharNormal)\n                this.charMagic.charAttack();\n                break\n            case 10:\n                Global.dameCharBig *= (isDoubleDame) ? 2 : 1;\n                this.charMagic.charAttack();\n                this.attackMonster(Global.dameCharBig)\n                break\n            case 11:\n                let totalDame = Global.dameCharSmall + Global.dameCharNormal  + Global.dameCharBig;\n                totalDame *= (isDoubleDame) ? 2 : 1;\n                this.charMagic.charAttack()\n                this.charFighter.charAttack();\n                this.charArchers.charAttack();\n                this.attackMonster(totalDame);\n            default:\n                break;\n        }\n    }\n    start() {\n\n    }\n\n    effectDameBagGuy(node: cc.Node, dame: number) {\n        node.active = true;\n        node.getComponent(cc.Label).string = \"-\" + dame;\n        cc.tween(node)\n            .to(1, { y: 200 })\n            .call(() => {\n                node.active = false;\n                node.y = -70;\n            }).start();\n    }\n\n    effectDameBagGuyMiss(node: cc.Node) {\n        if (Global.shield > 0) {\n            node.active = true;\n            //node.getComponent(cc.Label).string = \"-\" + dame;\n            cc.tween(node)\n                .to(1, { y: 200 })\n                .call(() => {\n                    node.active = false;\n                    node.y = -70;\n                }).start();\n        } if (Global.shield == 0) {\n            node.active = false;\n        }\n\n    }\n    updateHpChar() {\n        this.lbHpChar.string = Global.hpChar + ' ';\n    }\n\n    updateHpBagGuy() {\n        this.lbHpMonster.string = Global.hpMonster + ' ';\n    }\n\n    updateShield() {\n        this.lbShield.string = Global.shield + ' ';\n    }\n    onClickRestart() {\n        if(parseInt(cc.sys.localStorage.getItem(\"hpChar\"))) {\n            Global.hpChar = parseInt(cc.sys.localStorage.getItem(\"hpChar\")) || Global.hpChar;\n            console.log(\"vao if\")\n            this.updateHpChar();\n        }else {\n            Global.hpChar = 10;\n            this.updateHpChar();\n            console.log(\"vao else\");\n        }\n        this.monstersDefeated = 0;\n        this.currentMonsterIndex = 0;\n        this.countMonsterDie = 0;\n        console.log(\"quai chet resart\", this.countMonsterDie);\n        this.updateHpChar();\n        //this.updateHpBagGuy();\n        this.maskLoadGame();\n        this.nTableCards.removeAllChildren();\n        this.nMonters.removeAllChildren();\n        this.selectedCards = [];\n        this.listMonsters = [];\n        this.listIdCard = this.shuffleArray(this.listIdCard);\n        this.loadCards();\n        this.createMonster(0, Global.levelData[this.selectedLevel].hp, 1);\n        Global.shield = 0;\n        this.nShield.active = false;\n        this.updateShield();\n        console.log(\"Game restarted\");\n    }\n\n    destroyGame() {\n        console.log(\"destroyyy \")\n        this.node.destroy();\n    }\n    // update (dt) {}\n}\n"]}